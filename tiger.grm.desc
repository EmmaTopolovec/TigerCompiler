3 shift/reduce conflicts

error:  state 33: shift/reduce conflict (shift FUNCTION, reduce by rule 53)
error:  state 86: shift/reduce conflict (shift RPAREN, reduce by rule 60)
error:  state 99: shift/reduce conflict (shift TYPE, reduce by rule 65)

state 0:

	program : . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	program	goto 146
	exp	goto 2
	var	goto 1

	.	error


state 1:

	exp : var .  (reduce by rule 1)
	exp : var . ASSIGN exp 
	var : var . DOT ID 
	var : var . LBRACK exp RBRACK 

	LBRACK	shift 16
	DOT	shift 15
	ASSIGN	shift 14


	.	reduce by rule 1


state 2:

	program : exp .  (reduce by rule 0)
	exp : exp . oper1 exp 
	exp : exp . oper2 exp 
	exp : exp . oper3 exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20

	oper1	goto 19
	oper2	goto 18
	oper3	goto 17

	.	reduce by rule 0


state 3:

	exp : NIL .  (reduce by rule 6)



	.	reduce by rule 6


state 4:

	exp : BREAK .  (reduce by rule 42)



	.	reduce by rule 42


state 5:

	exp : LET . IN body END 
	exp : LET . decs IN body END 
	exp : LET . IN END 
	exp : LET . decs IN END 

	IN	shift 40
	FUNCTION	shift 39
	VAR	shift 38
	TYPE	shift 37

	decs	goto 36
	dec	goto 35
	fundeclist	goto 34
	fundec	goto 33
	typedecs	goto 32

	.	error


state 6:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 41


	.	error


state 7:

	exp : WHILE . exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 42
	var	goto 1

	.	error


state 8:

	exp : IF . exp THEN exp 
	exp : IF . exp THEN exp ELSE exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 43
	var	goto 1

	.	error


state 9:

	exp : MINUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 44
	var	goto 1

	.	error


state 10:

	exp : LPAREN . RPAREN 
	exp : LPAREN . extraexps RPAREN 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	RPAREN	shift 47
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 46
	var	goto 1
	extraexps	goto 45

	.	error


state 11:

	exp : STRING .  (reduce by rule 8)



	.	reduce by rule 8


state 12:

	exp : INT .  (reduce by rule 7)



	.	reduce by rule 7


state 13:

	exp : ID . LPAREN RPAREN 
	exp : ID . LPAREN args RPAREN 
	exp : ID . LBRACE RBRACE 
	exp : ID . LBRACE recfields RBRACE 
	exp : ID . LBRACK exp RBRACK OF exp 
	var : ID .  (reduce by rule 2)
	var : ID . LBRACK exp RBRACK 

	LPAREN	shift 50
	LBRACK	shift 49
	LBRACE	shift 48


	.	reduce by rule 2


state 14:

	exp : var ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 51
	var	goto 1

	.	error


state 15:

	var : var DOT . ID 

	ID	shift 52


	.	error


state 16:

	var : var LBRACK . exp RBRACK 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 53
	var	goto 1

	.	error


state 17:

	exp : exp oper3 . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 54
	var	goto 1

	.	error


state 18:

	exp : exp oper2 . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 55
	var	goto 1

	.	error


state 19:

	exp : exp oper1 . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 56
	var	goto 1

	.	error


state 20:

	exp : exp OR . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 57
	var	goto 1

	.	error


state 21:

	exp : exp AND . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 58
	var	goto 1

	.	error


state 22:

	oper3 : GE .  (reduce by rule 26)



	.	reduce by rule 26


state 23:

	oper3 : GT .  (reduce by rule 25)



	.	reduce by rule 25


state 24:

	oper3 : LE .  (reduce by rule 24)



	.	reduce by rule 24


state 25:

	oper3 : LT .  (reduce by rule 23)



	.	reduce by rule 23


state 26:

	oper3 : NEQ .  (reduce by rule 22)



	.	reduce by rule 22


state 27:

	oper3 : EQ .  (reduce by rule 21)



	.	reduce by rule 21


state 28:

	oper2 : DIVIDE .  (reduce by rule 20)



	.	reduce by rule 20


state 29:

	oper2 : TIMES .  (reduce by rule 19)



	.	reduce by rule 19


state 30:

	oper1 : MINUS .  (reduce by rule 18)



	.	reduce by rule 18


state 31:

	oper1 : PLUS .  (reduce by rule 17)



	.	reduce by rule 17


state 32:

	dec : typedecs .  (reduce by rule 64)



	.	reduce by rule 64

error:  state 33: shift/reduce conflict (shift FUNCTION, reduce by rule 53)

state 33:

	fundeclist : fundec . fundeclist 
	fundeclist : fundec .  (reduce by rule 53)

	FUNCTION	shift 39

	fundeclist	goto 59
	fundec	goto 33

	.	reduce by rule 53


state 34:

	dec : fundeclist .  (reduce by rule 51)



	.	reduce by rule 51


state 35:

	decs : dec .  (reduce by rule 47)
	decs : dec . decs 

	FUNCTION	shift 39
	VAR	shift 38
	TYPE	shift 37

	decs	goto 60
	dec	goto 35
	fundeclist	goto 34
	fundec	goto 33
	typedecs	goto 32

	.	reduce by rule 47


state 36:

	exp : LET decs . IN body END 
	exp : LET decs . IN END 

	IN	shift 61


	.	error


state 37:

	typedecs : TYPE . ID EQ ty 
	typedecs : TYPE . ID EQ ty typedecs 

	ID	shift 62


	.	error


state 38:

	dec : VAR . ID ASSIGN exp 
	dec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 63


	.	error


state 39:

	fundec : FUNCTION . ID LPAREN RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN RPAREN COLON ID EQ exp 
	fundec : FUNCTION . ID LPAREN fields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN fields RPAREN COLON ID EQ exp 

	ID	shift 64


	.	error


state 40:

	exp : LET IN . body END 
	exp : LET IN . END 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	END	shift 67
	BREAK	shift 4
	NIL	shift 3

	exp	goto 66
	var	goto 1
	body	goto 65

	.	error


state 41:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 68


	.	error


state 42:

	exp : exp . oper1 exp 
	exp : exp . oper2 exp 
	exp : exp . oper3 exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : WHILE exp . DO exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	DO	shift 69

	oper1	goto 19
	oper2	goto 18
	oper3	goto 17

	.	error


state 43:

	exp : exp . oper1 exp 
	exp : exp . oper2 exp 
	exp : exp . oper3 exp 
	exp : IF exp . THEN exp 
	exp : IF exp . THEN exp ELSE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	THEN	shift 70

	oper1	goto 19
	oper2	goto 18
	oper3	goto 17

	.	error


state 44:

	exp : MINUS exp .  (reduce by rule 13)
	exp : exp . oper1 exp 
	exp : exp . oper2 exp 
	exp : exp . oper3 exp 
	exp : exp . AND exp 
	exp : exp . OR exp 


	oper1	goto 19
	oper2	goto 18
	oper3	goto 17

	.	reduce by rule 13


state 45:

	exp : LPAREN extraexps . RPAREN 

	RPAREN	shift 71


	.	error


state 46:

	exp : exp . oper1 exp 
	exp : exp . oper2 exp 
	exp : exp . oper3 exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	extraexps : exp .  (reduce by rule 33)
	extraexps : exp . SEMICOLON extraexps 

	SEMICOLON	shift 72
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20

	oper1	goto 19
	oper2	goto 18
	oper3	goto 17

	.	reduce by rule 33


state 47:

	exp : LPAREN RPAREN .  (reduce by rule 31)



	.	reduce by rule 31


state 48:

	exp : ID LBRACE . RBRACE 
	exp : ID LBRACE . recfields RBRACE 

	ID	shift 75
	RBRACE	shift 74

	recfields	goto 73

	.	error


state 49:

	exp : ID LBRACK . exp RBRACK OF exp 
	var : ID LBRACK . exp RBRACK 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 76
	var	goto 1

	.	error


state 50:

	exp : ID LPAREN . RPAREN 
	exp : ID LPAREN . args RPAREN 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	RPAREN	shift 79
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 78
	var	goto 1
	args	goto 77

	.	error


state 51:

	exp : exp . oper1 exp 
	exp : exp . oper2 exp 
	exp : exp . oper3 exp 
	exp : var ASSIGN exp .  (reduce by rule 35)
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20

	oper1	goto 19
	oper2	goto 18
	oper3	goto 17

	.	reduce by rule 35


state 52:

	var : var DOT ID .  (reduce by rule 3)



	.	reduce by rule 3


state 53:

	exp : exp . oper1 exp 
	exp : exp . oper2 exp 
	exp : exp . oper3 exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	var : var LBRACK exp . RBRACK 

	RBRACK	shift 80
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20

	oper1	goto 19
	oper2	goto 18
	oper3	goto 17

	.	error


state 54:

	exp : exp . oper1 exp 
	exp : exp . oper2 exp 
	exp : exp . oper3 exp 
	exp : exp oper3 exp .  (reduce by rule 16)
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 16
	COMMA	reduce by rule 16
	SEMICOLON	reduce by rule 16
	RPAREN	reduce by rule 16
	RBRACK	reduce by rule 16
	RBRACE	reduce by rule 16
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 16
	OR	reduce by rule 16
	THEN	reduce by rule 16
	ELSE	reduce by rule 16
	TO	reduce by rule 16
	DO	reduce by rule 16
	IN	reduce by rule 16
	END	reduce by rule 16
	FUNCTION	reduce by rule 16
	VAR	reduce by rule 16
	TYPE	reduce by rule 16

	oper1	goto 19
	oper2	goto 18
	oper3	goto 17

	.	error


state 55:

	exp : exp . oper1 exp 
	exp : exp . oper2 exp 
	exp : exp oper2 exp .  (reduce by rule 15)
	exp : exp . oper3 exp 
	exp : exp . AND exp 
	exp : exp . OR exp 


	oper1	goto 19
	oper2	goto 18
	oper3	goto 17

	.	reduce by rule 15


state 56:

	exp : exp . oper1 exp 
	exp : exp oper1 exp .  (reduce by rule 14)
	exp : exp . oper2 exp 
	exp : exp . oper3 exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	TIMES	shift 29
	DIVIDE	shift 28

	oper1	goto 19
	oper2	goto 18
	oper3	goto 17

	.	reduce by rule 14


state 57:

	exp : exp . oper1 exp 
	exp : exp . oper2 exp 
	exp : exp . oper3 exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 39)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21

	oper1	goto 19
	oper2	goto 18
	oper3	goto 17

	.	reduce by rule 39


state 58:

	exp : exp . oper1 exp 
	exp : exp . oper2 exp 
	exp : exp . oper3 exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 38)
	exp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22

	oper1	goto 19
	oper2	goto 18
	oper3	goto 17

	.	reduce by rule 38


state 59:

	fundeclist : fundec fundeclist .  (reduce by rule 52)



	.	reduce by rule 52


state 60:

	decs : dec decs .  (reduce by rule 48)



	.	reduce by rule 48


state 61:

	exp : LET decs IN . body END 
	exp : LET decs IN . END 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	END	shift 82
	BREAK	shift 4
	NIL	shift 3

	exp	goto 66
	var	goto 1
	body	goto 81

	.	error


state 62:

	typedecs : TYPE ID . EQ ty 
	typedecs : TYPE ID . EQ ty typedecs 

	EQ	shift 83


	.	error


state 63:

	dec : VAR ID . ASSIGN exp 
	dec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 85
	ASSIGN	shift 84


	.	error


state 64:

	fundec : FUNCTION ID . LPAREN RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN RPAREN COLON ID EQ exp 
	fundec : FUNCTION ID . LPAREN fields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN fields RPAREN COLON ID EQ exp 

	LPAREN	shift 86


	.	error


state 65:

	exp : LET IN body . END 

	END	shift 87


	.	error


state 66:

	exp : exp . oper1 exp 
	exp : exp . oper2 exp 
	exp : exp . oper3 exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	body : exp .  (reduce by rule 49)
	body : exp . SEMICOLON body 

	SEMICOLON	shift 88
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20

	oper1	goto 19
	oper2	goto 18
	oper3	goto 17

	.	reduce by rule 49


state 67:

	exp : LET IN END .  (reduce by rule 45)



	.	reduce by rule 45


state 68:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 89
	var	goto 1

	.	error


state 69:

	exp : WHILE exp DO . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 90
	var	goto 1

	.	error


state 70:

	exp : IF exp THEN . exp 
	exp : IF exp THEN . exp ELSE exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 91
	var	goto 1

	.	error


state 71:

	exp : LPAREN extraexps RPAREN .  (reduce by rule 32)



	.	reduce by rule 32


state 72:

	extraexps : exp SEMICOLON . extraexps 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 46
	var	goto 1
	extraexps	goto 92

	.	error


state 73:

	exp : ID LBRACE recfields . RBRACE 

	RBRACE	shift 93


	.	error


state 74:

	exp : ID LBRACE RBRACE .  (reduce by rule 27)



	.	reduce by rule 27


state 75:

	recfields : ID . EQ exp 
	recfields : ID . EQ exp COMMA recfields 

	EQ	shift 94


	.	error


state 76:

	exp : exp . oper1 exp 
	exp : exp . oper2 exp 
	exp : exp . oper3 exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : ID LBRACK exp . RBRACK OF exp 
	var : ID LBRACK exp . RBRACK 

	RBRACK	shift 95
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20

	oper1	goto 19
	oper2	goto 18
	oper3	goto 17

	.	error


state 77:

	exp : ID LPAREN args . RPAREN 

	RPAREN	shift 96


	.	error


state 78:

	exp : exp . oper1 exp 
	exp : exp . oper2 exp 
	exp : exp . oper3 exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	args : exp .  (reduce by rule 11)
	args : exp . COMMA args 

	COMMA	shift 97
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20

	oper1	goto 19
	oper2	goto 18
	oper3	goto 17

	.	reduce by rule 11


state 79:

	exp : ID LPAREN RPAREN .  (reduce by rule 9)



	.	reduce by rule 9


state 80:

	var : var LBRACK exp RBRACK .  (reduce by rule 5)



	.	reduce by rule 5


state 81:

	exp : LET decs IN body . END 

	END	shift 98


	.	error


state 82:

	exp : LET decs IN END .  (reduce by rule 46)



	.	reduce by rule 46


state 83:

	typedecs : TYPE ID EQ . ty 
	typedecs : TYPE ID EQ . ty typedecs 

	ID	shift 102
	LBRACE	shift 101
	ARRAY	shift 100

	ty	goto 99

	.	error


state 84:

	dec : VAR ID ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 103
	var	goto 1

	.	error


state 85:

	dec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 104


	.	error

error:  state 86: shift/reduce conflict (shift RPAREN, reduce by rule 60)

state 86:

	fundec : FUNCTION ID LPAREN . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . RPAREN COLON ID EQ exp 
	fundec : FUNCTION ID LPAREN . fields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . fields RPAREN COLON ID EQ exp 

	ID	shift 108
	RPAREN	shift 107

	fields	goto 106
	field	goto 105

	.	error


state 87:

	exp : LET IN body END .  (reduce by rule 43)



	.	reduce by rule 43


state 88:

	body : exp SEMICOLON . body 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 66
	var	goto 1
	body	goto 109

	.	error


state 89:

	exp : exp . oper1 exp 
	exp : exp . oper2 exp 
	exp : exp . oper3 exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	TO	shift 110

	oper1	goto 19
	oper2	goto 18
	oper3	goto 17

	.	error


state 90:

	exp : exp . oper1 exp 
	exp : exp . oper2 exp 
	exp : exp . oper3 exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : WHILE exp DO exp .  (reduce by rule 40)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20

	oper1	goto 19
	oper2	goto 18
	oper3	goto 17

	.	reduce by rule 40


state 91:

	exp : exp . oper1 exp 
	exp : exp . oper2 exp 
	exp : exp . oper3 exp 
	exp : IF exp THEN exp .  (reduce by rule 36)
	exp : IF exp THEN exp . ELSE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	ELSE	shift 111

	oper1	goto 19
	oper2	goto 18
	oper3	goto 17

	.	reduce by rule 36


state 92:

	extraexps : exp SEMICOLON extraexps .  (reduce by rule 34)



	.	reduce by rule 34


state 93:

	exp : ID LBRACE recfields RBRACE .  (reduce by rule 28)



	.	reduce by rule 28


state 94:

	recfields : ID EQ . exp 
	recfields : ID EQ . exp COMMA recfields 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 112
	var	goto 1

	.	error


state 95:

	exp : ID LBRACK exp RBRACK . OF exp 
	var : ID LBRACK exp RBRACK .  (reduce by rule 4)

	OF	shift 113


	.	reduce by rule 4


state 96:

	exp : ID LPAREN args RPAREN .  (reduce by rule 10)



	.	reduce by rule 10


state 97:

	args : exp COMMA . args 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 78
	var	goto 1
	args	goto 114

	.	error


state 98:

	exp : LET decs IN body END .  (reduce by rule 44)



	.	reduce by rule 44

error:  state 99: shift/reduce conflict (shift TYPE, reduce by rule 65)

state 99:

	typedecs : TYPE ID EQ ty .  (reduce by rule 65)
	typedecs : TYPE ID EQ ty . typedecs 

	TYPE	shift 37

	typedecs	goto 115

	.	reduce by rule 65


state 100:

	ty : ARRAY . OF ID 

	OF	shift 116


	.	error


state 101:

	ty : LBRACE . fields RBRACE 

	ID	shift 108

	fields	goto 117
	field	goto 105

	.	reduce by rule 60


state 102:

	ty : ID .  (reduce by rule 67)



	.	reduce by rule 67


state 103:

	exp : exp . oper1 exp 
	exp : exp . oper2 exp 
	exp : exp . oper3 exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	dec : VAR ID ASSIGN exp .  (reduce by rule 62)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20

	oper1	goto 19
	oper2	goto 18
	oper3	goto 17

	.	reduce by rule 62


state 104:

	dec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 118


	.	error


state 105:

	fields : field . COMMA fields 
	fields : field .  (reduce by rule 59)

	COMMA	shift 119


	.	reduce by rule 59


state 106:

	fundec : FUNCTION ID LPAREN fields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN fields . RPAREN COLON ID EQ exp 

	RPAREN	shift 120


	.	error


state 107:

	fundec : FUNCTION ID LPAREN RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN RPAREN . COLON ID EQ exp 

	COLON	shift 122
	EQ	shift 121


	.	error


state 108:

	field : ID . COLON ID 

	COLON	shift 123


	.	error


state 109:

	body : exp SEMICOLON body .  (reduce by rule 50)



	.	reduce by rule 50


state 110:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 124
	var	goto 1

	.	error


state 111:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 125
	var	goto 1

	.	error


state 112:

	exp : exp . oper1 exp 
	exp : exp . oper2 exp 
	exp : exp . oper3 exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	recfields : ID EQ exp .  (reduce by rule 29)
	recfields : ID EQ exp . COMMA recfields 

	COMMA	shift 126
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20

	oper1	goto 19
	oper2	goto 18
	oper3	goto 17

	.	reduce by rule 29


state 113:

	exp : ID LBRACK exp RBRACK OF . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 127
	var	goto 1

	.	error


state 114:

	args : exp COMMA args .  (reduce by rule 12)



	.	reduce by rule 12


state 115:

	typedecs : TYPE ID EQ ty typedecs .  (reduce by rule 66)



	.	reduce by rule 66


state 116:

	ty : ARRAY OF . ID 

	ID	shift 128


	.	error


state 117:

	ty : LBRACE fields . RBRACE 

	RBRACE	shift 129


	.	error


state 118:

	dec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 130
	var	goto 1

	.	error


state 119:

	fields : field COMMA . fields 

	ID	shift 108

	fields	goto 131
	field	goto 105

	.	reduce by rule 60


state 120:

	fundec : FUNCTION ID LPAREN fields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN fields RPAREN . COLON ID EQ exp 

	COLON	shift 133
	EQ	shift 132


	.	error


state 121:

	fundec : FUNCTION ID LPAREN RPAREN EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 134
	var	goto 1

	.	error


state 122:

	fundec : FUNCTION ID LPAREN RPAREN COLON . ID EQ exp 

	ID	shift 135


	.	error


state 123:

	field : ID COLON . ID 

	ID	shift 136


	.	error


state 124:

	exp : exp . oper1 exp 
	exp : exp . oper2 exp 
	exp : exp . oper3 exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	DO	shift 137

	oper1	goto 19
	oper2	goto 18
	oper3	goto 17

	.	error


state 125:

	exp : exp . oper1 exp 
	exp : exp . oper2 exp 
	exp : exp . oper3 exp 
	exp : IF exp THEN exp ELSE exp .  (reduce by rule 37)
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20

	oper1	goto 19
	oper2	goto 18
	oper3	goto 17

	.	reduce by rule 37


state 126:

	recfields : ID EQ exp COMMA . recfields 

	ID	shift 75

	recfields	goto 138

	.	error


state 127:

	exp : exp . oper1 exp 
	exp : exp . oper2 exp 
	exp : exp . oper3 exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : ID LBRACK exp RBRACK OF exp .  (reduce by rule 70)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20

	oper1	goto 19
	oper2	goto 18
	oper3	goto 17

	.	reduce by rule 70


state 128:

	ty : ARRAY OF ID .  (reduce by rule 69)



	.	reduce by rule 69


state 129:

	ty : LBRACE fields RBRACE .  (reduce by rule 68)



	.	reduce by rule 68


state 130:

	exp : exp . oper1 exp 
	exp : exp . oper2 exp 
	exp : exp . oper3 exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	dec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 63)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20

	oper1	goto 19
	oper2	goto 18
	oper3	goto 17

	.	reduce by rule 63


state 131:

	fields : field COMMA fields .  (reduce by rule 58)



	.	reduce by rule 58


state 132:

	fundec : FUNCTION ID LPAREN fields RPAREN EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 139
	var	goto 1

	.	error


state 133:

	fundec : FUNCTION ID LPAREN fields RPAREN COLON . ID EQ exp 

	ID	shift 140


	.	error


state 134:

	exp : exp . oper1 exp 
	exp : exp . oper2 exp 
	exp : exp . oper3 exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	fundec : FUNCTION ID LPAREN RPAREN EQ exp .  (reduce by rule 54)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20

	oper1	goto 19
	oper2	goto 18
	oper3	goto 17

	.	reduce by rule 54


state 135:

	fundec : FUNCTION ID LPAREN RPAREN COLON ID . EQ exp 

	EQ	shift 141


	.	error


state 136:

	field : ID COLON ID .  (reduce by rule 61)



	.	reduce by rule 61


state 137:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 142
	var	goto 1

	.	error


state 138:

	recfields : ID EQ exp COMMA recfields .  (reduce by rule 30)



	.	reduce by rule 30


state 139:

	exp : exp . oper1 exp 
	exp : exp . oper2 exp 
	exp : exp . oper3 exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	fundec : FUNCTION ID LPAREN fields RPAREN EQ exp .  (reduce by rule 56)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20

	oper1	goto 19
	oper2	goto 18
	oper3	goto 17

	.	reduce by rule 56


state 140:

	fundec : FUNCTION ID LPAREN fields RPAREN COLON ID . EQ exp 

	EQ	shift 143


	.	error


state 141:

	fundec : FUNCTION ID LPAREN RPAREN COLON ID EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 144
	var	goto 1

	.	error


state 142:

	exp : exp . oper1 exp 
	exp : exp . oper2 exp 
	exp : exp . oper3 exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 41)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20

	oper1	goto 19
	oper2	goto 18
	oper3	goto 17

	.	reduce by rule 41


state 143:

	fundec : FUNCTION ID LPAREN fields RPAREN COLON ID EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 145
	var	goto 1

	.	error


state 144:

	exp : exp . oper1 exp 
	exp : exp . oper2 exp 
	exp : exp . oper3 exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	fundec : FUNCTION ID LPAREN RPAREN COLON ID EQ exp .  (reduce by rule 55)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20

	oper1	goto 19
	oper2	goto 18
	oper3	goto 17

	.	reduce by rule 55


state 145:

	exp : exp . oper1 exp 
	exp : exp . oper2 exp 
	exp : exp . oper3 exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	fundec : FUNCTION ID LPAREN fields RPAREN COLON ID EQ exp .  (reduce by rule 57)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20

	oper1	goto 19
	oper2	goto 18
	oper3	goto 17

	.	reduce by rule 57


state 146:


	EOF	accept


	.	error

450 of 906 action table entries left after compaction
183 goto table entries
